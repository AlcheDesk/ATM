<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meowlomo.atm.core.mapper.ProjectReportInfoReferenceMapper">
    <resultMap id="BaseResultMap" type="com.meowlomo.atm.core.model.ProjectReportInfo">
        <id column="project_id" jdbcType="BIGINT" property="projectId" />
        <result column="project_name" jdbcType="VARCHAR" property="projectName" />
        <result column="project_created_at" jdbcType="TIMESTAMP" property="projectCreatedAt" />
        <result column="active_test_case_number" jdbcType="INTEGER" property="activeTestCaseNumber" />
        <result column="total_run_number" jdbcType="BIGINT" property="totalRunNumber" />
        <result column="total_execution_time" jdbcType="BIGINT" property="totalExecutionTime" />
        <result column="executed_test_case_number" jdbcType="INTEGER" property="executedTestCaseNumber" />
        <result column="failed_test_case_number" jdbcType="INTEGER" property="failedTestCaseNumber" />
        <result column="passed_test_case_number" jdbcType="INTEGER" property="passedTestCaseNumber" />
        <result column="pass_rate" jdbcType="NUMERIC" property="passRate" />
        <result column="fail_rate" jdbcType="NUMERIC" property="failRate" />
        <result column="total_test_case_number" jdbcType="INTEGER" property="totalTestCaseNumber" />
        <collection property="runByDateChartData" column="project_id" select="getRunByDateInfoForProject" />
    </resultMap>
    <resultMap id="RunByDateInfoMap" type="com.meowlomo.atm.core.model.custom.RunByDateInfo">
        <result column="year" jdbcType="INTEGER" property="year" />
        <result column="execution_time" jdbcType="VARCHAR" property="executionDate" />
        <result column="month" jdbcType="INTEGER" property="month" />
        <result column="day" jdbcType="INTEGER" property="day" />
        <result column="pass_number" jdbcType="INTEGER" property="passNumber" />
        <result column="fail_number" jdbcType="INTEGER" property="failNumber" />
        <result column="total_number" jdbcType="INTEGER" property="totalNumber" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        project_id, project_name, project_created_at, active_test_case_number, total_run_number,
        total_execution_time, executed_test_case_number, failed_test_case_number, passed_test_case_number,
        pass_rate, fail_rate, total_test_case_number
    </sql>
    <select id="getRunByDateInfoForProject" parameterType="long" resultMap="RunByDateInfoMap">       
        SELECT    DATE_PART('YEAR', created_at)::int AS year,
                  DATE_PART('MONTH', created_at)::int AS month,
                  DATE_PART('DAY', created_at)::int AS day,
                  DATE_PART('YEAR', created_at)::int || '-' ||  DATE_PART('MONTH', created_at)::int || '-' || DATE_PART('DAY', created_at)::int as execution_time,
                  count(case status_id when 3 then 1 else null end) as pass_number,
                  count(case status_id when 4 then 1 when 5 then 1 else null end) as fail_number,
                  count(id)  AS total_number
        FROM      run
        WHERE project_id = #{projectId}
        GROUP BY  DATE_PART('DAY', created_at),
                  DATE_PART('MONTH', created_at),
                  DATE_PART('YEAR', created_at)
        ORDER BY  year,
                  month,
                  day
    </select>
    <select id="selectByExample" parameterType="com.meowlomo.atm.core.model.ProjectReportInfoExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from project_report_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
        select
        <if test="example != null and example.distinct">
            distinct
        </if>
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    ${column.aliasedEscapedColumnName}
                </foreach>
            </when>
            <otherwise>
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from project_report_info
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        <if test="example != null and example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from project_report_info
        where project_id = #{projectId,jdbcType=BIGINT}
    </select>
    <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
        select
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    ${column.aliasedEscapedColumnName}
                </foreach>
            </when>
            <otherwise>
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from project_report_info
        where project_id = #{projectId,jdbcType=BIGINT}
    </select>
    <select id="countByExample" parameterType="com.meowlomo.atm.core.model.ProjectReportInfoExample" resultType="java.lang.Long">
        select count(*) from project_report_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <select id="selectByExampleWithRowbounds" parameterType="com.meowlomo.atm.core.model.ProjectReportInfoExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from project_report_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectOneByExample" parameterType="com.meowlomo.atm.core.model.ProjectReportInfoExample" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from project_report_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        limit 1
    </select>
    <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
        select
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    ${column.aliasedEscapedColumnName}
                </foreach>
            </when>
            <otherwise>
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from project_report_info
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        <if test="example != null and example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
        limit 1
    </select>
</mapper>