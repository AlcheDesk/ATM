<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meowlomo.atm.core.mapper.SectionReferenceMapper">
    <resultMap id="ElementResultMap" type="com.meowlomo.atm.core.model.Element">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="comment" jdbcType="VARCHAR" property="comment" />
        <result column="locator_value" jdbcType="VARCHAR" property="locatorValue" />
        <result column="html_position_x" jdbcType="VARCHAR" property="htmlPositionX" />
        <result column="html_position_y" jdbcType="VARCHAR" property="htmlPositionY" />
        <result column="is_deleted" jdbcType="BIT" property="deleted" />
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
        <result column="log" jdbcType="VARCHAR" property="log" />
        <result column="element_type_id" jdbcType="OTHER" property="type" typeHandler="com.meowlomo.atm.typehandler.ElementTypeTypeHandler" />
        <result column="element_locator_type_id" jdbcType="OTHER" property="locatorType" typeHandler="com.meowlomo.atm.typehandler.ElementLocatorTypeTypeHandler" />
        <result column="color_id" jdbcType="OTHER" property="color" typeHandler="com.meowlomo.atm.typehandler.ColorTypeHandler" />
        <result column="parameter" jdbcType="OTHER" property="parameter" typeHandler="com.meowlomo.atm.typehandler.JsonNodeTypeHandler" />
        <result column="is_driver" jdbcType="BIT" property="isDriver" />
        <result column="project_id" jdbcType="BIGINT" property="projectId" />
        <result column="section_id" jdbcType="BIGINT" property="sectionId" />
        <result column="copy_from_id" jdbcType="BIGINT" property="copyFromId" />
        <result column="application_id" jdbcType="BIGINT" property="applicationId" />
    </resultMap>
    <resultMap id="BaseResultMap" type="com.meowlomo.atm.core.model.Section">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="comment" jdbcType="VARCHAR" property="comment" />
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
        <result column="is_deleted" jdbcType="BIT" property="deleted" />
        <result column="log" jdbcType="VARCHAR" property="log" />
        <result column="application_id" jdbcType="BIGINT" property="applicationId" />
        <result column="copy_from_id" jdbcType="BIGINT" property="copyFromId" />
        <result column="project_id" jdbcType="BIGINT" property="projectId" />
        <collection property="elements" column="id" select="getElementsBySection" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, name, comment, created_at, updated_at, is_deleted, log, application_id, copy_from_id,
        project_id
    </sql>
    <select id="getElementsBySection" parameterType="long" resultMap="ElementResultMap"> select * from element where is_deleted =
        false and section_id=#{elementId}
    </select>
    <select id="selectByExample" parameterType="com.meowlomo.atm.core.model.SectionExample" resultMap="BaseResultMap">
        select
        <if test="distinct">distinct
        </if>
        <include refid="Base_Column_List" />
        from section
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
        select
        <if test="example.distinct">distinct
        </if>
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">${column.escapedColumnName}
                </foreach>
            </when>
            <otherwise>id, name, comment, created_at, updated_at, is_deleted,
                log, application_id, copy_from_id
            </otherwise>
        </choose>
        from section
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        <if test="example.orderByClause != null">order by ${example.orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from section where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
        select
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">${column.escapedColumnName}
                </foreach>
            </when>
            <otherwise>id, name, comment, created_at, updated_at, is_deleted,
                log, application_id, copy_from_id
            </otherwise>
        </choose>
        from section where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="countByExample" parameterType="com.meowlomo.atm.core.model.SectionExample" resultType="java.lang.Long">
        select count(*) from section
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <select id="selectByExampleWithRowbounds" parameterType="com.meowlomo.atm.core.model.SectionExample" resultMap="BaseResultMap">
        select
        <if test="distinct">distinct
        </if>
        <include refid="Base_Column_List" />
        from section
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">order by ${orderByClause}
        </if>
    </select>
    <select id="selectOneByExample" parameterType="com.meowlomo.atm.core.model.SectionExample" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from section
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">order by ${orderByClause}
        </if>
        limit 1
    </select>
    <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
        select
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">${column.escapedColumnName}
                </foreach>
            </when>
            <otherwise>id, name, comment, created_at, updated_at, is_deleted,
                log, application_id, copy_from_id
            </otherwise>
        </choose>
        from section
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        <if test="example.orderByClause != null">order by ${example.orderByClause}
        </if>
        limit 1
    </select>
</mapper>