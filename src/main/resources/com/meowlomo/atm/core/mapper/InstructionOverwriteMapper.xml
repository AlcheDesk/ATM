<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meowlomo.atm.core.mapper.InstructionOverwriteMapper">
    <resultMap id="BaseResultMap" type="com.meowlomo.atm.core.model.InstructionOverwrite">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="test_case_overwrite_id" jdbcType="BIGINT" property="testCaseOverwriteId" />
        <result column="test_case_id" jdbcType="BIGINT" property="testCaseId" />
        <result column="instruction_id" jdbcType="BIGINT" property="instructionId" />
        <result column="element_id" jdbcType="BIGINT" property="elementId" />
        <result column="overwrite_fields" jdbcType="VARCHAR" property="overwriteFields" />
        <result column="data" jdbcType="OTHER" property="data" typeHandler="com.meowlomo.atm.typehandler.JsonNodeTypeHandler" />
        <result column="instruction_type_id" jdbcType="OTHER" property="type" typeHandler="com.meowlomo.atm.typehandler.InstructionTypeTypeHandler" />
        <result column="ref_test_case_overwrite_id" jdbcType="BIGINT" property="refTestCaseOverwriteId" />
        <result column="copy_from_id" jdbcType="BIGINT" property="copyFromId" />
        <result column="log" jdbcType="VARCHAR" property="log" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                        <foreach collection="criteria.dataCriteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler} and
                                    #{criterion.secondValue,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                        <foreach collection="criteria.typeCriteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.InstructionTypeTypeHandler}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.InstructionTypeTypeHandler} and
                                    #{criterion.secondValue,typeHandler=com.meowlomo.atm.typehandler.InstructionTypeTypeHandler}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem,typeHandler=com.meowlomo.atm.typehandler.InstructionTypeTypeHandler}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                        <foreach collection="criteria.dataCriteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler} and
                                    #{criterion.secondValue,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                        <foreach collection="criteria.typeCriteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.InstructionTypeTypeHandler}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.InstructionTypeTypeHandler} and
                                    #{criterion.secondValue,typeHandler=com.meowlomo.atm.typehandler.InstructionTypeTypeHandler}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem,typeHandler=com.meowlomo.atm.typehandler.InstructionTypeTypeHandler}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, test_case_overwrite_id, test_case_id, instruction_id, element_id, overwrite_fields,
        data, instruction_type_id, ref_test_case_overwrite_id, copy_from_id, log
    </sql>
    <select id="selectByExample" parameterType="com.meowlomo.atm.core.model.InstructionOverwriteExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from instruction_overwrite
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
        select
        <if test="example != null and example.distinct">
            distinct
        </if>
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    ${column.aliasedEscapedColumnName}
                </foreach>
            </when>
            <otherwise>
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from instruction_overwrite
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        <if test="example != null and example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from instruction_overwrite
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
        select
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    ${column.aliasedEscapedColumnName}
                </foreach>
            </when>
            <otherwise>
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from instruction_overwrite
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from instruction_overwrite
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.meowlomo.atm.core.model.InstructionOverwriteExample">
        delete from instruction_overwrite
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.meowlomo.atm.core.model.InstructionOverwrite" useGeneratedKeys="true">
        insert into instruction_overwrite (test_case_overwrite_id, test_case_id, instruction_id,
        element_id, overwrite_fields, data,
        instruction_type_id,
        ref_test_case_overwrite_id, copy_from_id, log)
        values (#{testCaseOverwriteId,jdbcType=BIGINT}, #{testCaseId,jdbcType=BIGINT}, #{instructionId,jdbcType=BIGINT},
        #{elementId,jdbcType=BIGINT}, #{overwriteFields,jdbcType=VARCHAR}, #{data,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler},
        #{type,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.InstructionTypeTypeHandler},
        #{refTestCaseOverwriteId,jdbcType=BIGINT}, #{copyFromId,jdbcType=BIGINT}, #{log,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="record.id" parameterType="map" useGeneratedKeys="true">
        insert into instruction_overwrite
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach close=")" collection="selective" item="column" open="(" separator=",">
                    ${column.escapedColumnName}
                </foreach>
            </when>
            <otherwise>
                <trim prefix="(" suffix=")" suffixOverrides=",">
                    <if test="record.testCaseOverwriteId != null">
                        test_case_overwrite_id,
                    </if>
                    <if test="record.testCaseId != null">
                        test_case_id,
                    </if>
                    <if test="record.instructionId != null">
                        instruction_id,
                    </if>
                    <if test="record.elementId != null">
                        element_id,
                    </if>
                    <if test="record.overwriteFields != null">
                        overwrite_fields,
                    </if>
                    <if test="record.data != null">
                        data,
                    </if>
                    <if test="record.type != null">
                        instruction_type_id,
                    </if>
                    <if test="record.refTestCaseOverwriteId != null">
                        ref_test_case_overwrite_id,
                    </if>
                    <if test="record.copyFromId != null">
                        copy_from_id,
                    </if>
                    <if test="record.log != null">
                        log,
                    </if>
                </trim>
                <trim prefix="(" suffix=")" suffixOverrides="," />
            </otherwise>
        </choose>
        values
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach close=")" collection="selective" item="column" open="(" separator=",">
                    #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
                </foreach>
            </when>
            <otherwise>
                <trim prefix="(" suffix=")" suffixOverrides=",">
                    <if test="record.testCaseOverwriteId != null">
                        #{record.testCaseOverwriteId,jdbcType=BIGINT},
                    </if>
                    <if test="record.testCaseId != null">
                        #{record.testCaseId,jdbcType=BIGINT},
                    </if>
                    <if test="record.instructionId != null">
                        #{record.instructionId,jdbcType=BIGINT},
                    </if>
                    <if test="record.elementId != null">
                        #{record.elementId,jdbcType=BIGINT},
                    </if>
                    <if test="record.overwriteFields != null">
                        #{record.overwriteFields,jdbcType=VARCHAR},
                    </if>
                    <if test="record.data != null">
                        #{record.data,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler},
                    </if>
                    <if test="record.type != null">
                        #{record.type,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.InstructionTypeTypeHandler},
                    </if>
                    <if test="record.refTestCaseOverwriteId != null">
                        #{record.refTestCaseOverwriteId,jdbcType=BIGINT},
                    </if>
                    <if test="record.copyFromId != null">
                        #{record.copyFromId,jdbcType=BIGINT},
                    </if>
                    <if test="record.log != null">
                        #{record.log,jdbcType=VARCHAR},
                    </if>
                </trim>
            </otherwise>
        </choose>
    </insert>
    <select id="countByExample" parameterType="com.meowlomo.atm.core.model.InstructionOverwriteExample" resultType="java.lang.Long">
        select count(*) from instruction_overwrite
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update instruction_overwrite
        SET
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    <choose>
                        <when test="'data'.toString() == column.value">
                            ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                        </when>
                        <when test="'instruction_type_id'.toString() == column.value">
                            ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.InstructionTypeTypeHandler}
                        </when>
                        <otherwise>
                            ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
                        </otherwise>
                    </choose>
                </foreach>
            </when>
            <otherwise>
                <trim suffixOverrides=",">
                    <if test="record.id != null">
                        id = #{record.id,jdbcType=BIGINT},
                    </if>
                    <if test="record.testCaseOverwriteId != null">
                        test_case_overwrite_id = #{record.testCaseOverwriteId,jdbcType=BIGINT},
                    </if>
                    <if test="record.testCaseId != null">
                        test_case_id = #{record.testCaseId,jdbcType=BIGINT},
                    </if>
                    <if test="record.instructionId != null">
                        instruction_id = #{record.instructionId,jdbcType=BIGINT},
                    </if>
                    <if test="record.elementId != null">
                        element_id = #{record.elementId,jdbcType=BIGINT},
                    </if>
                    <if test="record.overwriteFields != null">
                        overwrite_fields = #{record.overwriteFields,jdbcType=VARCHAR},
                    </if>
                    <if test="record.data != null">
                        data = #{record.data,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler},
                    </if>
                    <if test="record.type != null">
                        instruction_type_id = #{record.type,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.InstructionTypeTypeHandler},
                    </if>
                    <if test="record.refTestCaseOverwriteId != null">
                        ref_test_case_overwrite_id = #{record.refTestCaseOverwriteId,jdbcType=BIGINT},
                    </if>
                    <if test="record.copyFromId != null">
                        copy_from_id = #{record.copyFromId,jdbcType=BIGINT},
                    </if>
                    <if test="record.log != null">
                        log = #{record.log,jdbcType=VARCHAR},
                    </if>
                </trim>
            </otherwise>
        </choose>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update instruction_overwrite
        set id = #{record.id,jdbcType=BIGINT},
        test_case_overwrite_id = #{record.testCaseOverwriteId,jdbcType=BIGINT},
        test_case_id = #{record.testCaseId,jdbcType=BIGINT},
        instruction_id =
        #{record.instructionId,jdbcType=BIGINT},
        element_id = #{record.elementId,jdbcType=BIGINT},
        overwrite_fields = #{record.overwriteFields,jdbcType=VARCHAR},
        data =
        #{record.data,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler},
        instruction_type_id = #{record.type,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.InstructionTypeTypeHandler},
        ref_test_case_overwrite_id = #{record.refTestCaseOverwriteId,jdbcType=BIGINT},
        copy_from_id = #{record.copyFromId,jdbcType=BIGINT},
        log = #{record.log,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="map">
        update instruction_overwrite
        SET
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    <choose>
                        <when test="'data'.toString() == column.value">
                            ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                        </when>
                        <when test="'instruction_type_id'.toString() == column.value">
                            ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.InstructionTypeTypeHandler}
                        </when>
                        <otherwise>
                            ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
                        </otherwise>
                    </choose>
                </foreach>
            </when>
            <otherwise>
                <trim suffixOverrides=",">
                    <if test="record.testCaseOverwriteId != null">
                        test_case_overwrite_id = #{record.testCaseOverwriteId,jdbcType=BIGINT},
                    </if>
                    <if test="record.testCaseId != null">
                        test_case_id = #{record.testCaseId,jdbcType=BIGINT},
                    </if>
                    <if test="record.instructionId != null">
                        instruction_id = #{record.instructionId,jdbcType=BIGINT},
                    </if>
                    <if test="record.elementId != null">
                        element_id = #{record.elementId,jdbcType=BIGINT},
                    </if>
                    <if test="record.overwriteFields != null">
                        overwrite_fields = #{record.overwriteFields,jdbcType=VARCHAR},
                    </if>
                    <if test="record.data != null">
                        data = #{record.data,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler},
                    </if>
                    <if test="record.type != null">
                        instruction_type_id = #{record.type,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.InstructionTypeTypeHandler},
                    </if>
                    <if test="record.refTestCaseOverwriteId != null">
                        ref_test_case_overwrite_id = #{record.refTestCaseOverwriteId,jdbcType=BIGINT},
                    </if>
                    <if test="record.copyFromId != null">
                        copy_from_id = #{record.copyFromId,jdbcType=BIGINT},
                    </if>
                    <if test="record.log != null">
                        log = #{record.log,jdbcType=VARCHAR},
                    </if>
                </trim>
            </otherwise>
        </choose>
        where id = #{record.id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.meowlomo.atm.core.model.InstructionOverwrite">
        update instruction_overwrite
        set test_case_overwrite_id = #{testCaseOverwriteId,jdbcType=BIGINT},
        test_case_id = #{testCaseId,jdbcType=BIGINT},
        instruction_id =
        #{instructionId,jdbcType=BIGINT},
        element_id = #{elementId,jdbcType=BIGINT},
        overwrite_fields = #{overwriteFields,jdbcType=VARCHAR},
        data = #{data,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler},
        instruction_type_id = #{type,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.InstructionTypeTypeHandler},
        ref_test_case_overwrite_id = #{refTestCaseOverwriteId,jdbcType=BIGINT},
        copy_from_id = #{copyFromId,jdbcType=BIGINT},
        log = #{log,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByExampleWithRowbounds" parameterType="com.meowlomo.atm.core.model.InstructionOverwriteExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from instruction_overwrite
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectOneByExample" parameterType="com.meowlomo.atm.core.model.InstructionOverwriteExample" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from instruction_overwrite
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        limit 1
    </select>
    <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
        select
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    ${column.aliasedEscapedColumnName}
                </foreach>
            </when>
            <otherwise>
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from instruction_overwrite
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        <if test="example != null and example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
        limit 1
    </select>
</mapper>