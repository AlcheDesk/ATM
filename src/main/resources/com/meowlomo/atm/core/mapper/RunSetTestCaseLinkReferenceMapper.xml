<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meowlomo.atm.core.mapper.RunSetTestCaseLinkReferenceMapper">
    <resultMap id="DriverPackResultMap" type="com.meowlomo.atm.core.model.DriverPack">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
        <result column="execution_count" jdbcType="BIGINT" property="executionCount" />
        <result column="comment" jdbcType="VARCHAR" property="comment" />
        <result column="is_deleted" jdbcType="BIT" property="deleted" />
        <result column="log" jdbcType="VARCHAR" property="log" />
        <result column="is_default" jdbcType="BIT" property="isDefault" />
        <result column="copy_from_id" jdbcType="BIGINT" property="copyFromId" />
    </resultMap>
    <resultMap id="TestCaseOverwriteResultMap" type="com.meowlomo.atm.core.model.TestCaseOverwrite">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
        <result column="test_case_id" jdbcType="BIGINT" property="testCaseId" />
        <result column="is_deleted" jdbcType="BIT" property="deleted" />
        <result column="comment" jdbcType="VARCHAR" property="comment" />
    </resultMap>
    <resultMap id="TestCaseResultMap" type="com.meowlomo.atm.core.model.TestCase">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
        <result column="is_flagged" jdbcType="BIT" property="flagged" />
        <result column="comment" jdbcType="VARCHAR" property="comment" />
        <result column="log" jdbcType="VARCHAR" property="log" />
        <result column="is_deleted" jdbcType="BIT" property="deleted" />
        <result column="group_id" jdbcType="OTHER" property="group" typeHandler="com.meowlomo.atm.typehandler.GroupTypeHandler" />
        <result column="priority" jdbcType="INTEGER" property="priority" />
        <result column="test_case_type_id" jdbcType="OTHER" property="type" typeHandler="com.meowlomo.atm.typehandler.TestCaseTypeTypeHandler" />
        <result column="project_id" jdbcType="BIGINT" property="projectId" />
        <result column="copy_from_id" jdbcType="BIGINT" property="copyFromId" />
        <result column="timeout" jdbcType="INTEGER" property="timeout" />
        <result column="ref_run_set_id" jdbcType="BIGINT" property="refRunSetId" />
        <result column="resource_md5" jdbcType="CHAR" property="resourceMd5" />
        <result column="parameter" jdbcType="OTHER" property="parameter" typeHandler="com.meowlomo.atm.typehandler.JsonNodeTypeHandler" />
        <result column="uuid" jdbcType="OTHER" property="uuid" typeHandler="com.meowlomo.atm.typehandler.UUIDTypeHandler" />
        <result column="singleton" jdbcType="BIT" property="singleton" />
        <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    </resultMap>
    <resultMap id="RunSetResultMap" type="com.meowlomo.atm.core.model.RunSet">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
        <result column="comment" jdbcType="VARCHAR" property="comment" />
        <result column="is_deleted" jdbcType="BIT" property="deleted" />
        <result column="log" jdbcType="VARCHAR" property="log" />
        <result column="group_id" jdbcType="OTHER" property="group" typeHandler="com.meowlomo.atm.typehandler.GroupTypeHandler" />
        <result column="run_set_type_id" jdbcType="OTHER" property="type" typeHandler="com.meowlomo.atm.typehandler.RunSetTypeTypeHandler" />
        <result column="priority" jdbcType="INTEGER" property="priority" />
        <result column="copy_from_id" jdbcType="BIGINT" property="copyFromId" />
        <result column="parent_id" jdbcType="BIGINT" property="parentId" />
        <result column="uuid" jdbcType="OTHER" property="uuid" typeHandler="com.meowlomo.atm.typehandler.UUIDTypeHandler" />
        <result column="aliases" jdbcType="ARRAY" property="aliases" typeHandler="com.meowlomo.atm.typehandler.StringSetTypeHandler" />
    </resultMap>
    <resultMap id="BaseResultMap" type="com.meowlomo.atm.core.model.RunSetTestCaseLink">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="run_set_id" jdbcType="BIGINT" property="runSetId" />
        <result column="test_case_id" jdbcType="BIGINT" property="testCaseId" />
        <result column="test_case_overwrite_id" jdbcType="BIGINT" property="testCaseOverwriteId" />
        <result column="driver_pack_id" jdbcType="BIGINT" property="driverPackId" />
        <result column="ref_run_set_id" jdbcType="BIGINT" property="refRunSetId" />
        <result column="system_requirement_pack_id" jdbcType="BIGINT" property="systemRequirementPackId" />
        <result column="synchronize" jdbcType="BIT" property="synchronize" />
        <association property="testCase" column="test_case_id" select="getTestCaseByRunSetTestCaseLink" />
        <association property="testCaseOverwrite" column="test_case_overwrite_id" select="getTestCaseOverwriteByRunSetTestCaseLink" />
        <association property="driverPack" column="driver_pack_id" select="getDriverPackByRunSetTestCaseLink" />
        <association property="refRunSet" column="ref_run_set_id" select="getRefRunSetByRunSetTestCaseLink" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, run_set_id, test_case_id, test_case_overwrite_id, driver_pack_id, ref_run_set_id,
        system_requirement_pack_id, synchronize
    </sql>
    <select id="getTestCaseByRunSetTestCaseLink" parameterType="long" resultMap="TestCaseResultMap"> select * from test_case where
        id=#{testCaseId}
    </select>
    <select id="getTestCaseOverwriteByRunSetTestCaseLink" parameterType="long" resultMap="TestCaseOverwriteResultMap"> select * from test_case_overwrite
        where id=#{testCaseOverwriteId} and is_deleted = false
    </select>
    <select id="getDriverPackByRunSetTestCaseLink" parameterType="long" resultMap="DriverPackResultMap"> select * from driver_pack
        where id=#{driverPackId} and is_deleted = false
    </select>
    <select id="getRefRunSetByRunSetTestCaseLink" parameterType="long" resultMap="RunSetResultMap"> select * from run_set where
        id=#{refRunSetId}
    </select>
    <select id="selectByExample" parameterType="com.meowlomo.atm.core.model.RunSetTestCaseLinkExample" resultMap="BaseResultMap">
        select
        <if test="distinct">distinct
        </if>
        <include refid="Base_Column_List" />
        from run_set_test_case_link
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
        select
        <if test="example.distinct">distinct
        </if>
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">${column.escapedColumnName}
                </foreach>
            </when>
            <otherwise>id, run_set_id, test_case_id, test_case_overwrite_id,
                driver_pack_id, ref_run_set_id
            </otherwise>
        </choose>
        from run_set_test_case_link
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        <if test="example.orderByClause != null">order by ${example.orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from run_set_test_case_link where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
        select
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">${column.escapedColumnName}
                </foreach>
            </when>
            <otherwise>id, run_set_id, test_case_id, test_case_overwrite_id,
                driver_pack_id, ref_run_set_id
            </otherwise>
        </choose>
        from run_set_test_case_link where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="countByExample" parameterType="com.meowlomo.atm.core.model.RunSetTestCaseLinkExample" resultType="java.lang.Long">
        select count(*) from run_set_test_case_link
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <select id="selectByExampleWithRowbounds" parameterType="com.meowlomo.atm.core.model.RunSetTestCaseLinkExample" resultMap="BaseResultMap">
        select
        <if test="distinct">distinct
        </if>
        <include refid="Base_Column_List" />
        from run_set_test_case_link
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">order by ${orderByClause}
        </if>
    </select>
    <select id="selectOneByExample" parameterType="com.meowlomo.atm.core.model.RunSetTestCaseLinkExample" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from run_set_test_case_link
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">order by ${orderByClause}
        </if>
        limit 1
    </select>
    <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
        select
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">${column.escapedColumnName}
                </foreach>
            </when>
            <otherwise>id, run_set_id, test_case_id, test_case_overwrite_id,
                driver_pack_id, ref_run_set_id
            </otherwise>
        </choose>
        from run_set_test_case_link
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        <if test="example.orderByClause != null">order by ${example.orderByClause}
        </if>
        limit 1
    </select>
</mapper>