<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meowlomo.atm.core.mapper.ApplicationMapper">
    <resultMap id="BaseResultMap" type="com.meowlomo.atm.core.model.Application">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="comment" jdbcType="VARCHAR" property="comment" />
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
        <result column="is_deleted" jdbcType="BIT" property="deleted" />
        <result column="log" jdbcType="VARCHAR" property="log" />
        <result column="parameter" jdbcType="OTHER" property="parameter" typeHandler="com.meowlomo.atm.typehandler.JsonNodeTypeHandler" />
        <result column="version" jdbcType="VARCHAR" property="version" />
        <result column="project_id" jdbcType="BIGINT" property="projectId" />
        <result column="copy_from_id" jdbcType="BIGINT" property="copyFromId" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                        <foreach collection="criteria.parameterCriteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler} and
                                    #{criterion.secondValue,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                        <foreach collection="criteria.parameterCriteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler} and
                                    #{criterion.secondValue,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, name, comment, created_at, updated_at, is_deleted, log, parameter, version, project_id,
        copy_from_id
    </sql>
    <select id="selectByExample" parameterType="com.meowlomo.atm.core.model.ApplicationExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from application
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
        select
        <if test="example.distinct">
            distinct
        </if>
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    ${column.aliasedEscapedColumnName}
                </foreach>
            </when>
            <otherwise>
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from application
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        <if test="example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from application
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByPrimaryKeyWithLogicalDelete" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from application
        where id = #{id,jdbcType=BIGINT}
        and is_deleted =
        <choose>
            <when test="andLogicalDeleted">
                true
            </when>
            <otherwise>
                false
            </otherwise>
        </choose>
    </select>
    <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
        select
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    ${column.aliasedEscapedColumnName}
                </foreach>
            </when>
            <otherwise>
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from application
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from application
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.meowlomo.atm.core.model.ApplicationExample">
        delete from application
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.meowlomo.atm.core.model.Application" useGeneratedKeys="true">
        insert into application (name, comment, is_deleted,
        log, parameter,
        version, project_id, copy_from_id)
        values (#{name,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, #{deleted,jdbcType=BIT},
        #{log,jdbcType=VARCHAR}, #{parameter,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler},
        #{version,jdbcType=VARCHAR},
        #{projectId,jdbcType=BIGINT}, #{copyFromId,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="record.id" parameterType="map" useGeneratedKeys="true">
        insert into application
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach close=")" collection="selective" item="column" open="(" separator=",">
                    ${column.escapedColumnName}
                </foreach>
            </when>
            <otherwise>
                <trim prefix="(" suffix=")" suffixOverrides=",">
                    <if test="record.name != null">
                        name,
                    </if>
                    <if test="record.comment != null">
                        comment,
                    </if>
                    <if test="record.deleted != null">
                        is_deleted,
                    </if>
                    <if test="record.log != null">
                        log,
                    </if>
                    <if test="record.parameter != null">
                        parameter,
                    </if>
                    <if test="record.version != null">
                        version,
                    </if>
                    <if test="record.projectId != null">
                        project_id,
                    </if>
                    <if test="record.copyFromId != null">
                        copy_from_id,
                    </if>
                </trim>
                <trim prefix="(" suffix=")" suffixOverrides="," />
            </otherwise>
        </choose>
        values
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach close=")" collection="selective" item="column" open="(" separator=",">
                    #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
                </foreach>
            </when>
            <otherwise>
                <trim prefix="(" suffix=")" suffixOverrides=",">
                    <if test="record.name != null">
                        #{record.name,jdbcType=VARCHAR},
                    </if>
                    <if test="record.comment != null">
                        #{record.comment,jdbcType=VARCHAR},
                    </if>
                    <if test="record.deleted != null">
                        #{record.deleted,jdbcType=BIT},
                    </if>
                    <if test="record.log != null">
                        #{record.log,jdbcType=VARCHAR},
                    </if>
                    <if test="record.parameter != null">
                        #{record.parameter,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler},
                    </if>
                    <if test="record.version != null">
                        #{record.version,jdbcType=VARCHAR},
                    </if>
                    <if test="record.projectId != null">
                        #{record.projectId,jdbcType=BIGINT},
                    </if>
                    <if test="record.copyFromId != null">
                        #{record.copyFromId,jdbcType=BIGINT},
                    </if>
                </trim>
            </otherwise>
        </choose>
    </insert>
    <select id="countByExample" parameterType="com.meowlomo.atm.core.model.ApplicationExample" resultType="java.lang.Long">
        select count(*) from application
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update application
        SET
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
                </foreach>
            </when>
            <otherwise>
                <trim suffixOverrides=",">
                    <if test="record.id != null">
                        id = #{record.id,jdbcType=BIGINT},
                    </if>
                    <if test="record.name != null">
                        name = #{record.name,jdbcType=VARCHAR},
                    </if>
                    <if test="record.comment != null">
                        comment = #{record.comment,jdbcType=VARCHAR},
                    </if>
                    <if test="record.deleted != null">
                        is_deleted = #{record.deleted,jdbcType=BIT},
                    </if>
                    <if test="record.log != null">
                        log = #{record.log,jdbcType=VARCHAR},
                    </if>
                    <if test="record.parameter != null">
                        parameter = #{record.parameter,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler},
                    </if>
                    <if test="record.version != null">
                        version = #{record.version,jdbcType=VARCHAR},
                    </if>
                    <if test="record.projectId != null">
                        project_id = #{record.projectId,jdbcType=BIGINT},
                    </if>
                    <if test="record.copyFromId != null">
                        copy_from_id = #{record.copyFromId,jdbcType=BIGINT},
                    </if>
                </trim>
            </otherwise>
        </choose>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update application
        set id = #{record.id,jdbcType=BIGINT},
        name = #{record.name,jdbcType=VARCHAR},
        comment = #{record.comment,jdbcType=VARCHAR},
        is_deleted = #{record.deleted,jdbcType=BIT},
        log = #{record.log,jdbcType=VARCHAR},
        parameter =
        #{record.parameter,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler},
        version = #{record.version,jdbcType=VARCHAR},
        project_id = #{record.projectId,jdbcType=BIGINT},
        copy_from_id =
        #{record.copyFromId,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="map">
        update application
        SET
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
                </foreach>
            </when>
            <otherwise>
                <trim suffixOverrides=",">
                    <if test="record.name != null">
                        name = #{record.name,jdbcType=VARCHAR},
                    </if>
                    <if test="record.comment != null">
                        comment = #{record.comment,jdbcType=VARCHAR},
                    </if>
                    <if test="record.deleted != null">
                        is_deleted = #{record.deleted,jdbcType=BIT},
                    </if>
                    <if test="record.log != null">
                        log = #{record.log,jdbcType=VARCHAR},
                    </if>
                    <if test="record.parameter != null">
                        parameter = #{record.parameter,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler},
                    </if>
                    <if test="record.version != null">
                        version = #{record.version,jdbcType=VARCHAR},
                    </if>
                    <if test="record.projectId != null">
                        project_id = #{record.projectId,jdbcType=BIGINT},
                    </if>
                    <if test="record.copyFromId != null">
                        copy_from_id = #{record.copyFromId,jdbcType=BIGINT},
                    </if>
                </trim>
            </otherwise>
        </choose>
        where id = #{record.id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.meowlomo.atm.core.model.Application">
        update application
        set name = #{name,jdbcType=VARCHAR},
        comment = #{comment,jdbcType=VARCHAR},
        is_deleted = #{deleted,jdbcType=BIT},
        log = #{log,jdbcType=VARCHAR},
        parameter =
        #{parameter,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler},
        version = #{version,jdbcType=VARCHAR},
        project_id = #{projectId,jdbcType=BIGINT},
        copy_from_id = #{copyFromId,jdbcType=BIGINT}
        where id =
        #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByExampleWithRowbounds" parameterType="com.meowlomo.atm.core.model.ApplicationExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from application
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectOneByExample" parameterType="com.meowlomo.atm.core.model.ApplicationExample" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from application
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        limit 1
    </select>
    <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
        select
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    ${column.aliasedEscapedColumnName}
                </foreach>
            </when>
            <otherwise>
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from application
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        <if test="example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
        limit 1
    </select>
    <update id="logicalDeleteByExample" parameterType="map">
        update application set is_deleted = true
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="logicalDeleteByPrimaryKey" parameterType="java.lang.Long">
        update application set is_deleted = true
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>