<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meowlomo.atm.core.mapper.ElementMapper">
    <resultMap id="BaseResultMap" type="com.meowlomo.atm.core.model.Element">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="comment" jdbcType="VARCHAR" property="comment" />
        <result column="locator_value" jdbcType="VARCHAR" property="locatorValue" />
        <result column="html_position_x" jdbcType="VARCHAR" property="htmlPositionX" />
        <result column="html_position_y" jdbcType="VARCHAR" property="htmlPositionY" />
        <result column="is_deleted" jdbcType="BIT" property="deleted" />
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
        <result column="log" jdbcType="VARCHAR" property="log" />
        <result column="element_type_id" jdbcType="OTHER" property="type" typeHandler="com.meowlomo.atm.typehandler.ElementTypeTypeHandler" />
        <result column="element_locator_type_id" jdbcType="OTHER" property="locatorType" typeHandler="com.meowlomo.atm.typehandler.ElementLocatorTypeTypeHandler" />
        <result column="color_id" jdbcType="OTHER" property="color" typeHandler="com.meowlomo.atm.typehandler.ColorTypeHandler" />
        <result column="parameter" jdbcType="OTHER" property="parameter" typeHandler="com.meowlomo.atm.typehandler.JsonNodeTypeHandler" />
        <result column="is_driver" jdbcType="BIT" property="isDriver" />
        <result column="project_id" jdbcType="BIGINT" property="projectId" />
        <result column="section_id" jdbcType="BIGINT" property="sectionId" />
        <result column="copy_from_id" jdbcType="BIGINT" property="copyFromId" />
        <result column="application_id" jdbcType="BIGINT" property="applicationId" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                        <foreach collection="criteria.typeCriteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.ElementTypeTypeHandler}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.ElementTypeTypeHandler} and
                                    #{criterion.secondValue,typeHandler=com.meowlomo.atm.typehandler.ElementTypeTypeHandler}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem,typeHandler=com.meowlomo.atm.typehandler.ElementTypeTypeHandler}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                        <foreach collection="criteria.locatorTypeCriteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.ElementLocatorTypeTypeHandler}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.ElementLocatorTypeTypeHandler} and
                                    #{criterion.secondValue,typeHandler=com.meowlomo.atm.typehandler.ElementLocatorTypeTypeHandler}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem,typeHandler=com.meowlomo.atm.typehandler.ElementLocatorTypeTypeHandler}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                        <foreach collection="criteria.colorCriteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.ColorTypeHandler}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.ColorTypeHandler} and #{criterion.secondValue,typeHandler=com.meowlomo.atm.typehandler.ColorTypeHandler}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem,typeHandler=com.meowlomo.atm.typehandler.ColorTypeHandler}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                        <foreach collection="criteria.parameterCriteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler} and
                                    #{criterion.secondValue,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                        <foreach collection="criteria.typeCriteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.ElementTypeTypeHandler}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.ElementTypeTypeHandler} and
                                    #{criterion.secondValue,typeHandler=com.meowlomo.atm.typehandler.ElementTypeTypeHandler}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem,typeHandler=com.meowlomo.atm.typehandler.ElementTypeTypeHandler}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                        <foreach collection="criteria.locatorTypeCriteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.ElementLocatorTypeTypeHandler}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.ElementLocatorTypeTypeHandler} and
                                    #{criterion.secondValue,typeHandler=com.meowlomo.atm.typehandler.ElementLocatorTypeTypeHandler}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem,typeHandler=com.meowlomo.atm.typehandler.ElementLocatorTypeTypeHandler}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                        <foreach collection="criteria.colorCriteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.ColorTypeHandler}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.ColorTypeHandler} and #{criterion.secondValue,typeHandler=com.meowlomo.atm.typehandler.ColorTypeHandler}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem,typeHandler=com.meowlomo.atm.typehandler.ColorTypeHandler}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                        <foreach collection="criteria.parameterCriteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler} and
                                    #{criterion.secondValue,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, name, comment, locator_value, html_position_x, html_position_y, is_deleted, created_at,
        updated_at, log, element_type_id, element_locator_type_id, color_id, parameter, is_driver,
        project_id, section_id, copy_from_id,
        application_id
    </sql>
    <select id="selectByExample" parameterType="com.meowlomo.atm.core.model.ElementExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from element
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
        select
        <if test="example != null and example.distinct">
            distinct
        </if>
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    ${column.aliasedEscapedColumnName}
                </foreach>
            </when>
            <otherwise>
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from element
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        <if test="example != null and example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from element
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByPrimaryKeyWithLogicalDelete" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from element
        where id = #{id,jdbcType=BIGINT}
        and is_deleted =
        <choose>
            <when test="andLogicalDeleted">
                true
            </when>
            <otherwise>
                false
            </otherwise>
        </choose>
    </select>
    <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
        select
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    ${column.aliasedEscapedColumnName}
                </foreach>
            </when>
            <otherwise>
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from element
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from element
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.meowlomo.atm.core.model.ElementExample">
        delete from element
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.meowlomo.atm.core.model.Element" useGeneratedKeys="true">
        insert into element (name, comment, locator_value,
        html_position_x, html_position_y, is_deleted,
        log,
        element_type_id,
        element_locator_type_id,
        color_id,
        parameter,
        is_driver, project_id, section_id,
        copy_from_id, application_id
        )
        values (#{name,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, #{locatorValue,jdbcType=VARCHAR},
        #{htmlPositionX,jdbcType=VARCHAR}, #{htmlPositionY,jdbcType=VARCHAR}, #{deleted,jdbcType=BIT},
        #{log,jdbcType=VARCHAR}, #{type,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ElementTypeTypeHandler},
        #{locatorType,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ElementLocatorTypeTypeHandler},
        #{color,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ColorTypeHandler},
        #{parameter,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler},
        #{isDriver,jdbcType=BIT}, #{projectId,jdbcType=BIGINT}, #{sectionId,jdbcType=BIGINT},
        #{copyFromId,jdbcType=BIGINT},
        #{applicationId,jdbcType=BIGINT}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="record.id" parameterType="map" useGeneratedKeys="true">
        insert into element
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach close=")" collection="selective" item="column" open="(" separator=",">
                    ${column.escapedColumnName}
                </foreach>
            </when>
            <otherwise>
                <trim prefix="(" suffix=")" suffixOverrides=",">
                    <if test="record.name != null">
                        name,
                    </if>
                    <if test="record.comment != null">
                        comment,
                    </if>
                    <if test="record.locatorValue != null">
                        locator_value,
                    </if>
                    <if test="record.htmlPositionX != null">
                        html_position_x,
                    </if>
                    <if test="record.htmlPositionY != null">
                        html_position_y,
                    </if>
                    <if test="record.deleted != null">
                        is_deleted,
                    </if>
                    <if test="record.log != null">
                        log,
                    </if>
                    <if test="record.type != null">
                        element_type_id,
                    </if>
                    <if test="record.locatorType != null">
                        element_locator_type_id,
                    </if>
                    <if test="record.color != null">
                        color_id,
                    </if>
                    <if test="record.parameter != null">
                        parameter,
                    </if>
                    <if test="record.isDriver != null">
                        is_driver,
                    </if>
                    <if test="record.projectId != null">
                        project_id,
                    </if>
                    <if test="record.sectionId != null">
                        section_id,
                    </if>
                    <if test="record.copyFromId != null">
                        copy_from_id,
                    </if>
                    <if test="record.applicationId != null">
                        application_id,
                    </if>
                </trim>
                <trim prefix="(" suffix=")" suffixOverrides="," />
            </otherwise>
        </choose>
        values
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach close=")" collection="selective" item="column" open="(" separator=",">
                    #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
                </foreach>
            </when>
            <otherwise>
                <trim prefix="(" suffix=")" suffixOverrides=",">
                    <if test="record.name != null">
                        #{record.name,jdbcType=VARCHAR},
                    </if>
                    <if test="record.comment != null">
                        #{record.comment,jdbcType=VARCHAR},
                    </if>
                    <if test="record.locatorValue != null">
                        #{record.locatorValue,jdbcType=VARCHAR},
                    </if>
                    <if test="record.htmlPositionX != null">
                        #{record.htmlPositionX,jdbcType=VARCHAR},
                    </if>
                    <if test="record.htmlPositionY != null">
                        #{record.htmlPositionY,jdbcType=VARCHAR},
                    </if>
                    <if test="record.deleted != null">
                        #{record.deleted,jdbcType=BIT},
                    </if>
                    <if test="record.log != null">
                        #{record.log,jdbcType=VARCHAR},
                    </if>
                    <if test="record.type != null">
                        #{record.type,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ElementTypeTypeHandler},
                    </if>
                    <if test="record.locatorType != null">
                        #{record.locatorType,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ElementLocatorTypeTypeHandler},
                    </if>
                    <if test="record.color != null">
                        #{record.color,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ColorTypeHandler},
                    </if>
                    <if test="record.parameter != null">
                        #{record.parameter,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler},
                    </if>
                    <if test="record.isDriver != null">
                        #{record.isDriver,jdbcType=BIT},
                    </if>
                    <if test="record.projectId != null">
                        #{record.projectId,jdbcType=BIGINT},
                    </if>
                    <if test="record.sectionId != null">
                        #{record.sectionId,jdbcType=BIGINT},
                    </if>
                    <if test="record.copyFromId != null">
                        #{record.copyFromId,jdbcType=BIGINT},
                    </if>
                    <if test="record.applicationId != null">
                        #{record.applicationId,jdbcType=BIGINT},
                    </if>
                </trim>
            </otherwise>
        </choose>
    </insert>
    <select id="countByExample" parameterType="com.meowlomo.atm.core.model.ElementExample" resultType="java.lang.Long">
        select count(*) from element
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update element
        SET
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    <choose>
                        <when test="'element_type_id'.toString() == column.value">
                            ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ElementTypeTypeHandler}
                        </when>
                        <when test="'element_locator_type_id'.toString() == column.value">
                            ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ElementLocatorTypeTypeHandler}
                        </when>
                        <when test="'color_id'.toString() == column.value">
                            ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ColorTypeHandler}
                        </when>
                        <when test="'parameter'.toString() == column.value">
                            ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                        </when>
                        <otherwise>
                            ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
                        </otherwise>
                    </choose>
                </foreach>
            </when>
            <otherwise>
                <trim suffixOverrides=",">
                    <if test="record.id != null">
                        id = #{record.id,jdbcType=BIGINT},
                    </if>
                    <if test="record.name != null">
                        name = #{record.name,jdbcType=VARCHAR},
                    </if>
                    <if test="record.comment != null">
                        comment = #{record.comment,jdbcType=VARCHAR},
                    </if>
                    <if test="record.locatorValue != null">
                        locator_value = #{record.locatorValue,jdbcType=VARCHAR},
                    </if>
                    <if test="record.htmlPositionX != null">
                        html_position_x = #{record.htmlPositionX,jdbcType=VARCHAR},
                    </if>
                    <if test="record.htmlPositionY != null">
                        html_position_y = #{record.htmlPositionY,jdbcType=VARCHAR},
                    </if>
                    <if test="record.deleted != null">
                        is_deleted = #{record.deleted,jdbcType=BIT},
                    </if>
                    <if test="record.log != null">
                        log = #{record.log,jdbcType=VARCHAR},
                    </if>
                    <if test="record.type != null">
                        element_type_id = #{record.type,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ElementTypeTypeHandler},
                    </if>
                    <if test="record.locatorType != null">
                        element_locator_type_id = #{record.locatorType,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ElementLocatorTypeTypeHandler},
                    </if>
                    <if test="record.color != null">
                        color_id = #{record.color,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ColorTypeHandler},
                    </if>
                    <if test="record.parameter != null">
                        parameter = #{record.parameter,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler},
                    </if>
                    <if test="record.isDriver != null">
                        is_driver = #{record.isDriver,jdbcType=BIT},
                    </if>
                    <if test="record.projectId != null">
                        project_id = #{record.projectId,jdbcType=BIGINT},
                    </if>
                    <if test="record.sectionId != null">
                        section_id = #{record.sectionId,jdbcType=BIGINT},
                    </if>
                    <if test="record.copyFromId != null">
                        copy_from_id = #{record.copyFromId,jdbcType=BIGINT},
                    </if>
                    <if test="record.applicationId != null">
                        application_id = #{record.applicationId,jdbcType=BIGINT},
                    </if>
                </trim>
            </otherwise>
        </choose>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update element
        set id = #{record.id,jdbcType=BIGINT},
        name = #{record.name,jdbcType=VARCHAR},
        comment = #{record.comment,jdbcType=VARCHAR},
        locator_value = #{record.locatorValue,jdbcType=VARCHAR},
        html_position_x =
        #{record.htmlPositionX,jdbcType=VARCHAR},
        html_position_y = #{record.htmlPositionY,jdbcType=VARCHAR},
        is_deleted = #{record.deleted,jdbcType=BIT},
        log = #{record.log,jdbcType=VARCHAR},
        element_type_id =
        #{record.type,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ElementTypeTypeHandler},
        element_locator_type_id = #{record.locatorType,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ElementLocatorTypeTypeHandler},
        color_id = #{record.color,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ColorTypeHandler},
        parameter = #{record.parameter,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler},
        is_driver =
        #{record.isDriver,jdbcType=BIT},
        project_id = #{record.projectId,jdbcType=BIGINT},
        section_id = #{record.sectionId,jdbcType=BIGINT},
        copy_from_id = #{record.copyFromId,jdbcType=BIGINT},
        application_id =
        #{record.applicationId,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="map">
        update element
        SET
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    <choose>
                        <when test="'element_type_id'.toString() == column.value">
                            ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ElementTypeTypeHandler}
                        </when>
                        <when test="'element_locator_type_id'.toString() == column.value">
                            ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ElementLocatorTypeTypeHandler}
                        </when>
                        <when test="'color_id'.toString() == column.value">
                            ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ColorTypeHandler}
                        </when>
                        <when test="'parameter'.toString() == column.value">
                            ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler}
                        </when>
                        <otherwise>
                            ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
                        </otherwise>
                    </choose>
                </foreach>
            </when>
            <otherwise>
                <trim suffixOverrides=",">
                    <if test="record.name != null">
                        name = #{record.name,jdbcType=VARCHAR},
                    </if>
                    <if test="record.comment != null">
                        comment = #{record.comment,jdbcType=VARCHAR},
                    </if>
                    <if test="record.locatorValue != null">
                        locator_value = #{record.locatorValue,jdbcType=VARCHAR},
                    </if>
                    <if test="record.htmlPositionX != null">
                        html_position_x = #{record.htmlPositionX,jdbcType=VARCHAR},
                    </if>
                    <if test="record.htmlPositionY != null">
                        html_position_y = #{record.htmlPositionY,jdbcType=VARCHAR},
                    </if>
                    <if test="record.deleted != null">
                        is_deleted = #{record.deleted,jdbcType=BIT},
                    </if>
                    <if test="record.log != null">
                        log = #{record.log,jdbcType=VARCHAR},
                    </if>
                    <if test="record.type != null">
                        element_type_id = #{record.type,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ElementTypeTypeHandler},
                    </if>
                    <if test="record.locatorType != null">
                        element_locator_type_id = #{record.locatorType,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ElementLocatorTypeTypeHandler},
                    </if>
                    <if test="record.color != null">
                        color_id = #{record.color,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ColorTypeHandler},
                    </if>
                    <if test="record.parameter != null">
                        parameter = #{record.parameter,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler},
                    </if>
                    <if test="record.isDriver != null">
                        is_driver = #{record.isDriver,jdbcType=BIT},
                    </if>
                    <if test="record.projectId != null">
                        project_id = #{record.projectId,jdbcType=BIGINT},
                    </if>
                    <if test="record.sectionId != null">
                        section_id = #{record.sectionId,jdbcType=BIGINT},
                    </if>
                    <if test="record.copyFromId != null">
                        copy_from_id = #{record.copyFromId,jdbcType=BIGINT},
                    </if>
                    <if test="record.applicationId != null">
                        application_id = #{record.applicationId,jdbcType=BIGINT},
                    </if>
                </trim>
            </otherwise>
        </choose>
        where id = #{record.id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.meowlomo.atm.core.model.Element">
        update element
        set name = #{name,jdbcType=VARCHAR},
        comment = #{comment,jdbcType=VARCHAR},
        locator_value = #{locatorValue,jdbcType=VARCHAR},
        html_position_x =
        #{htmlPositionX,jdbcType=VARCHAR},
        html_position_y = #{htmlPositionY,jdbcType=VARCHAR},
        is_deleted = #{deleted,jdbcType=BIT},
        log = #{log,jdbcType=VARCHAR},
        element_type_id =
        #{type,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ElementTypeTypeHandler},
        element_locator_type_id = #{locatorType,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ElementLocatorTypeTypeHandler},
        color_id =
        #{color,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.ColorTypeHandler},
        parameter = #{parameter,jdbcType=OTHER,typeHandler=com.meowlomo.atm.typehandler.JsonNodeTypeHandler},
        is_driver = #{isDriver,jdbcType=BIT},
        project_id =
        #{projectId,jdbcType=BIGINT},
        section_id = #{sectionId,jdbcType=BIGINT},
        copy_from_id = #{copyFromId,jdbcType=BIGINT},
        application_id = #{applicationId,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByExampleWithRowbounds" parameterType="com.meowlomo.atm.core.model.ElementExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from element
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectOneByExample" parameterType="com.meowlomo.atm.core.model.ElementExample" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from element
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        limit 1
    </select>
    <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
        select
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    ${column.aliasedEscapedColumnName}
                </foreach>
            </when>
            <otherwise>
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from element
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        <if test="example != null and example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
        limit 1
    </select>
    <update id="logicalDeleteByExample" parameterType="map">
        update element set is_deleted = true
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="logicalDeleteByPrimaryKey" parameterType="java.lang.Long">
        update element set is_deleted = true
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>