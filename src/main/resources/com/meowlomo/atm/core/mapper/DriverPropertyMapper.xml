<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meowlomo.atm.core.mapper.DriverPropertyMapper">
    <resultMap id="BaseResultMap" type="com.meowlomo.atm.core.model.DriverProperty">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="driver_vendor_id" jdbcType="BIGINT" property="driverVendorId" />
        <result column="default_value" jdbcType="VARCHAR" property="defaultValue" />
        <result column="default_action" jdbcType="VARCHAR" property="defaultAction" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="value_type" jdbcType="VARCHAR" property="valueType" />
        <result column="is_predefined_value_required" jdbcType="BIT" property="predefinedValueRequired" />
        <result column="is_active" jdbcType="BIT" property="active" />
        <result column="is_predefined" jdbcType="BIT" property="predefined" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, name, driver_vendor_id, default_value, default_action, description, value_type,
        is_predefined_value_required, is_active, is_predefined
    </sql>
    <select id="selectByExample" parameterType="com.meowlomo.atm.core.model.DriverPropertyExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from driver_property
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
        select
        <if test="example.distinct">
            distinct
        </if>
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    ${column.aliasedEscapedColumnName}
                </foreach>
            </when>
            <otherwise>
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from driver_property
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        <if test="example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from driver_property
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
        select
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    ${column.aliasedEscapedColumnName}
                </foreach>
            </when>
            <otherwise>
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from driver_property
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from driver_property
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.meowlomo.atm.core.model.DriverPropertyExample">
        delete from driver_property
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.meowlomo.atm.core.model.DriverProperty" useGeneratedKeys="true">
        insert into driver_property (name, driver_vendor_id, default_value,
        default_action, description,
        value_type,
        is_predefined_value_required, is_active, is_predefined
        )
        values (#{name,jdbcType=VARCHAR}, #{driverVendorId,jdbcType=BIGINT}, #{defaultValue,jdbcType=VARCHAR},
        #{defaultAction,jdbcType=VARCHAR},
        #{description,jdbcType=VARCHAR}, #{valueType,jdbcType=VARCHAR},
        #{predefinedValueRequired,jdbcType=BIT}, #{active,jdbcType=BIT}, #{predefined,jdbcType=BIT}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="record.id" parameterType="map" useGeneratedKeys="true">
        insert into driver_property
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach close=")" collection="selective" item="column" open="(" separator=",">
                    ${column.escapedColumnName}
                </foreach>
            </when>
            <otherwise>
                <trim prefix="(" suffix=")" suffixOverrides=",">
                    <if test="record.name != null">
                        name,
                    </if>
                    <if test="record.driverVendorId != null">
                        driver_vendor_id,
                    </if>
                    <if test="record.defaultValue != null">
                        default_value,
                    </if>
                    <if test="record.defaultAction != null">
                        default_action,
                    </if>
                    <if test="record.description != null">
                        description,
                    </if>
                    <if test="record.valueType != null">
                        value_type,
                    </if>
                    <if test="record.predefinedValueRequired != null">
                        is_predefined_value_required,
                    </if>
                    <if test="record.active != null">
                        is_active,
                    </if>
                    <if test="record.predefined != null">
                        is_predefined,
                    </if>
                </trim>
                <trim prefix="(" suffix=")" suffixOverrides="," />
            </otherwise>
        </choose>
        values
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach close=")" collection="selective" item="column" open="(" separator=",">
                    #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
                </foreach>
            </when>
            <otherwise>
                <trim prefix="(" suffix=")" suffixOverrides=",">
                    <if test="record.name != null">
                        #{record.name,jdbcType=VARCHAR},
                    </if>
                    <if test="record.driverVendorId != null">
                        #{record.driverVendorId,jdbcType=BIGINT},
                    </if>
                    <if test="record.defaultValue != null">
                        #{record.defaultValue,jdbcType=VARCHAR},
                    </if>
                    <if test="record.defaultAction != null">
                        #{record.defaultAction,jdbcType=VARCHAR},
                    </if>
                    <if test="record.description != null">
                        #{record.description,jdbcType=VARCHAR},
                    </if>
                    <if test="record.valueType != null">
                        #{record.valueType,jdbcType=VARCHAR},
                    </if>
                    <if test="record.predefinedValueRequired != null">
                        #{record.predefinedValueRequired,jdbcType=BIT},
                    </if>
                    <if test="record.active != null">
                        #{record.active,jdbcType=BIT},
                    </if>
                    <if test="record.predefined != null">
                        #{record.predefined,jdbcType=BIT},
                    </if>
                </trim>
            </otherwise>
        </choose>
    </insert>
    <select id="countByExample" parameterType="com.meowlomo.atm.core.model.DriverPropertyExample" resultType="java.lang.Long">
        select count(*) from driver_property
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update driver_property
        SET
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
                </foreach>
            </when>
            <otherwise>
                <trim suffixOverrides=",">
                    <if test="record.id != null">
                        id = #{record.id,jdbcType=BIGINT},
                    </if>
                    <if test="record.name != null">
                        name = #{record.name,jdbcType=VARCHAR},
                    </if>
                    <if test="record.driverVendorId != null">
                        driver_vendor_id = #{record.driverVendorId,jdbcType=BIGINT},
                    </if>
                    <if test="record.defaultValue != null">
                        default_value = #{record.defaultValue,jdbcType=VARCHAR},
                    </if>
                    <if test="record.defaultAction != null">
                        default_action = #{record.defaultAction,jdbcType=VARCHAR},
                    </if>
                    <if test="record.description != null">
                        description = #{record.description,jdbcType=VARCHAR},
                    </if>
                    <if test="record.valueType != null">
                        value_type = #{record.valueType,jdbcType=VARCHAR},
                    </if>
                    <if test="record.predefinedValueRequired != null">
                        is_predefined_value_required = #{record.predefinedValueRequired,jdbcType=BIT},
                    </if>
                    <if test="record.active != null">
                        is_active = #{record.active,jdbcType=BIT},
                    </if>
                    <if test="record.predefined != null">
                        is_predefined = #{record.predefined,jdbcType=BIT},
                    </if>
                </trim>
            </otherwise>
        </choose>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update driver_property
        set id = #{record.id,jdbcType=BIGINT},
        name = #{record.name,jdbcType=VARCHAR},
        driver_vendor_id = #{record.driverVendorId,jdbcType=BIGINT},
        default_value = #{record.defaultValue,jdbcType=VARCHAR},
        default_action =
        #{record.defaultAction,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        value_type = #{record.valueType,jdbcType=VARCHAR},
        is_predefined_value_required = #{record.predefinedValueRequired,jdbcType=BIT},
        is_active
        = #{record.active,jdbcType=BIT},
        is_predefined = #{record.predefined,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="map">
        update driver_property
        SET
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
                </foreach>
            </when>
            <otherwise>
                <trim suffixOverrides=",">
                    <if test="record.name != null">
                        name = #{record.name,jdbcType=VARCHAR},
                    </if>
                    <if test="record.driverVendorId != null">
                        driver_vendor_id = #{record.driverVendorId,jdbcType=BIGINT},
                    </if>
                    <if test="record.defaultValue != null">
                        default_value = #{record.defaultValue,jdbcType=VARCHAR},
                    </if>
                    <if test="record.defaultAction != null">
                        default_action = #{record.defaultAction,jdbcType=VARCHAR},
                    </if>
                    <if test="record.description != null">
                        description = #{record.description,jdbcType=VARCHAR},
                    </if>
                    <if test="record.valueType != null">
                        value_type = #{record.valueType,jdbcType=VARCHAR},
                    </if>
                    <if test="record.predefinedValueRequired != null">
                        is_predefined_value_required = #{record.predefinedValueRequired,jdbcType=BIT},
                    </if>
                    <if test="record.active != null">
                        is_active = #{record.active,jdbcType=BIT},
                    </if>
                    <if test="record.predefined != null">
                        is_predefined = #{record.predefined,jdbcType=BIT},
                    </if>
                </trim>
            </otherwise>
        </choose>
        where id = #{record.id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.meowlomo.atm.core.model.DriverProperty">
        update driver_property
        set name = #{name,jdbcType=VARCHAR},
        driver_vendor_id = #{driverVendorId,jdbcType=BIGINT},
        default_value = #{defaultValue,jdbcType=VARCHAR},
        default_action =
        #{defaultAction,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        value_type = #{valueType,jdbcType=VARCHAR},
        is_predefined_value_required = #{predefinedValueRequired,jdbcType=BIT},
        is_active = #{active,jdbcType=BIT},
        is_predefined = #{predefined,jdbcType=BIT}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByExampleWithRowbounds" parameterType="com.meowlomo.atm.core.model.DriverPropertyExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from driver_property
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectOneByExample" parameterType="com.meowlomo.atm.core.model.DriverPropertyExample" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from driver_property
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        limit 1
    </select>
    <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
        select
        <choose>
            <when test="selective != null and selective.length > 0">
                <foreach collection="selective" item="column" separator=",">
                    ${column.aliasedEscapedColumnName}
                </foreach>
            </when>
            <otherwise>
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from driver_property
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        <if test="example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
        limit 1
    </select>
</mapper>